# -*- coding: utf-8 -*-
"""insurance_premium_predictor_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13QMpleJis6iJ07JbiziBm4NCJG7PrSJm
"""

# Load required libraries
library(keras)

# Splitting data into training and testing sets
set.seed(123)
indices <- sample(1:nrow(cleaned_dataset), 0.8 * nrow(cleaned_dataset))
train_data <- cleaned_dataset[indices, ]
test_data <- cleaned_dataset[-indices, ]

# Define the neural network model
model <- keras_model_sequential() %>%
  layer_dense(units = 64, activation = 'relu', input_shape = ncol(train_data) - 1) %>%
  layer_dense(units = 32, activation = 'relu') %>%
  layer_dense(units = 1)

# Compile the model
model %>% compile(
  optimizer = 'adam',
  loss = 'mse',
  metrics = list('mse')
)

# Train the model
history <- model %>% fit(
  x = as.matrix(train_data[, -which(names(train_data) == 'expenses')]),
  y = train_data$expenses,
  epochs = 100,
  batch_size = 32,
  validation_split = 0.2
)

# Evaluate the model
model %>% evaluate(
  x = as.matrix(test_data[, -which(names(test_data) == 'expenses')]),
  y = test_data$expenses
)

# Make predictions
predictions <- model %>% predict(as.matrix(test_data[, -which(names(test_data) == 'expenses')]))

# Display sample predictions
head(predictions)